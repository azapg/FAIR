name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build and publish release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install frontend dependencies
        working-directory: frontend-dev
        run: bun install --frozen-lockfile

      - name: Synchronise project version from tag
        run: python scripts/sync_version.py --version "${{ github.ref_name }}"

      - name: Run build pipeline
        run: ./build.sh

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: |
            dist/*

      - name: Publish to PyPI
        if: ${{ env.PYPI_TOKEN != '' && !contains(github.ref_name, '-') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          user: __token__
          password: ${{ env.PYPI_TOKEN }}
